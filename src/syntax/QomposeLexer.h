/*
 * Qompose - A simple programmer's text editor.
 * Copyright (C) 2013 Axel Rasmussen
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

#ifndef INCLUDE_QOMPOSE_LEXER_H
#define INCLUDE_QOMPOSE_LEXER_H

#include <QObject>
#include <QList>

// Forward declarations.

struct QomposeLexerToken;
typedef struct QomposeLexerToken QomposeLexerToken;

/*!
 * \brief This class provides a lexer interface for syntax highlighting lexers.
 */
class QomposeLexer : public QObject
{
	public:
		/*!
		 * \brief This enum defines the states a block can end in after being lex'ed.
		 */
		enum BlockState
		{
			UninitializedState = 0,
			NormalState = 1,
			PreprocessorState = 2,
			CommentState = 4,
			StringState = 8
		};
		
		/*!
		 * \brief This enum defines the different types of tokens our lexer looks for.
		 */
		enum Token
		{
			PreprocessorToken = 0,
			CommentToken = 1,
			StringToken = 2,
			KeywordToken = 3,
			OperatorToken = 4,
			NumberToken = 5
		};
		
		static QString getSettingKey(Token t);
		
		QomposeLexer(QObject *p = 0);
		virtual ~QomposeLexer();
		
		virtual QList<QomposeLexerToken> lexBlock(int *s, const QString &t, int p) = 0;
};

/*!
 * \brief This struct denotes a single token generated by our lexer.
 *
 * The start is the offset of the first character of this token in the block that
 * was lex'ed (NOT relative to the start of the document), and the count is the length
 * of this token in characters.
 */
struct QomposeLexerToken
{
	int start;
	int count;
	QomposeLexer::Token token;
};

#endif
